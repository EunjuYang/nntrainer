diff --git a/jni/Android.mk.in b/jni/Android.mk.in
index 38c3161e..d36de610 100644
--- a/jni/Android.mk.in
+++ b/jni/Android.mk.in
@@ -81,12 +81,14 @@ LOCAL_EXPORT_C_INCLUDES  := $(LOCAL_C_INCLUDES)
 
 include $(BUILD_STATIC_LIBRARY)
 
+@MESON_OPENCL_BLOCK_START@
 include $(CLEAR_VARS)
 LOCAL_MODULE            := OpenCL
 LOCAL_SRC_FILES         := @MESON_CL_ROOT@/lib/arm64-v8a/libOpenCL.so
 LOCAL_EXPORT_C_INCLUDES := @MESON_CL_ROOT@/include
 
 include $(PREBUILT_SHARED_LIBRARY)
+@MESON_OPENCL_BLOCK_END@
 
 include $(CLEAR_VARS)
 
@@ -128,6 +130,7 @@ include $(BUILD_SHARED_LIBRARY)
 
 endif # MESON_HAS_GGML
 
+@MESON_CLBLAST_BLOCK_START@
 include $(CLEAR_VARS)
 
 LOCAL_MODULE        := clblast
@@ -239,6 +242,7 @@ LOCAL_CXXFLAGS      += -std=c++17 -O3 -fexceptions -DOPENCL_API
 LOCAL_EXPORT_C_INCLUDES  := $(LOCAL_C_INCLUDES)
 
 include $(BUILD_STATIC_LIBRARY)
+@MESON_CLBLAST_BLOCK_END@
 
 include $(CLEAR_VARS)
 
@@ -256,8 +260,8 @@ LOCAL_MODULE_TAGS   := optional
 LOCAL_LDLIBS        := -llog -landroid -fopenmp -static-openmp
 LOCAL_LDFLAGS 	    += "-Wl,-z,max-page-size=16384"
 
-LOCAL_SHARED_LIBRARIES := OpenCL
-LOCAL_STATIC_LIBRARIES += iniparser openblas ruy clblast
+@MESON_OPENCL_SHARED_LIBS@
+LOCAL_STATIC_LIBRARIES += iniparser openblas ruy @MESON_OPENCL_STATIC_LIBS@
 
 ifeq ($(MESON_HAS_TFLITE), 1)
   LOCAL_STATIC_LIBRARIES += tensorflow-lite
diff --git a/jni/meson.build b/jni/meson.build
index 7b628cfd..923970bd 100644
--- a/jni/meson.build
+++ b/jni/meson.build
@@ -41,9 +41,31 @@ if ruy_dep.found()
   and_conf.set('MESON_RUY_ROOT', ruy_root)
 endif
 
-if clblast_dep.found()
-  and_conf.set('MESON_CLBLAST_ROOT', clblast_root)
-  and_conf.set('MESON_CL_ROOT', opencl_root)
+if get_option('enable-opencl')
+  if clblast_dep.found()
+    and_conf.set('MESON_CLBLAST_ROOT', clblast_root)
+    and_conf.set('MESON_CL_ROOT', opencl_root)
+  endif
+  # Set OpenCL block markers to include the OpenCL sections
+  and_conf.set('MESON_OPENCL_BLOCK_START', '')
+  and_conf.set('MESON_OPENCL_BLOCK_END', '')
+  and_conf.set('MESON_CLBLAST_BLOCK_START', '')
+  and_conf.set('MESON_CLBLAST_BLOCK_END', '')
+  # Set library dependencies
+  and_conf.set('MESON_OPENCL_SHARED_LIBS', 'LOCAL_SHARED_LIBRARIES := OpenCL')
+  and_conf.set('MESON_OPENCL_STATIC_LIBS', 'clblast')
+else
+  # Comment out OpenCL sections when OpenCL is disabled
+  and_conf.set('MESON_OPENCL_BLOCK_START', '# OpenCL disabled - start')
+  and_conf.set('MESON_OPENCL_BLOCK_END', '# OpenCL disabled - end')
+  and_conf.set('MESON_CLBLAST_BLOCK_START', '# CLBlast disabled - start')
+  and_conf.set('MESON_CLBLAST_BLOCK_END', '# CLBlast disabled - end')
+  # No OpenCL libraries needed
+  and_conf.set('MESON_OPENCL_SHARED_LIBS', '# OpenCL disabled - no shared libs')
+  and_conf.set('MESON_OPENCL_STATIC_LIBS', '')
+  # Set dummy paths to avoid undefined variables
+  and_conf.set('MESON_CLBLAST_ROOT', '')
+  and_conf.set('MESON_CL_ROOT', '')
 endif
 
 if tflite_dep.found()
diff --git a/meson.build b/meson.build
index 5d141304..9c5b145a 100644
--- a/meson.build
+++ b/meson.build
@@ -172,9 +172,6 @@ if get_option('enable-mmap')
 endif
 
 if get_option('enable-opencl')
-  if get_option('platform') == 'android'
-  endif
-
   message ('OpenCL build is now enabled and will function only if an OpenCL-supported GPU is available. Using CLBlast as the OpenCL backend.')
   extra_defines += '-DENABLE_OPENCL=1'
   extra_defines += '-DCL_TARGET_OPENCL_VERSION=200'
@@ -199,6 +196,13 @@ if get_option('enable-opencl')
     clblast_proj = cmake.subproject('clblast', options: clblast_options, required: true)
     clblast_dep = clblast_proj.dependency('clblast')
   endif
+else
+  # When OpenCL is disabled, set clblast_dep to dummy_dep for Android
+  if get_option('platform') == 'android'
+    clblast_dep = dummy_dep
+    clblast_root = ''
+    opencl_root = ''
+  endif
 endif
 
 if get_option('opencl-kernel-path') != ''
